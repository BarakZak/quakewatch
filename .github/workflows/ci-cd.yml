name: CI/CD Pipeline for QuakeWatch

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest tests/test_app.py -v

    - name: Build Docker image
      run: |
        docker build -t barakzak/quakewatch:${{ github.sha }} .

    - name: Test Docker image
      run: |
        docker run --rm barakzak/quakewatch:${{ github.sha }} python -c "import flask; print(flask.__version__)"

    - name: Log in to Docker Hub
      if: github.event_name == 'push'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push Docker image
      if: github.event_name == 'push'
      run: |
        docker push barakzak/quakewatch:${{ github.sha }}

  deploy:
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Pull Docker image
      run: |
        docker pull barakzak/quakewatch:${{ github.sha }}

    - name: Tag and push Docker image
      run: |
        docker tag barakzak/quakewatch:${{ github.sha }} barakzak/quakewatch:latest
        docker push barakzak/quakewatch:latest

    - name: Set up Helm
      uses: azure/setup-helm@v4
      with:
        version: v3.12.0

    - name: Deploy Helm chart
      run: |
        echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > kubeconfig.yaml
        export KUBECONFIG=kubeconfig.yaml
        helm upgrade --install quakewatch ./helm/quakewatch \
          --namespace default \
          --set image.tag=${{ github.sha }}